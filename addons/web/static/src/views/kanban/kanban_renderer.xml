<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="web.KanbanRenderer" owl="1">
        <div class="o_kanban_renderer" t-attf-class="o_kanban_{{ props.list.isGrouped ? '' : 'un' }}grouped {{ props.info.className or '' }}" t-ref="root">
            <t t-foreach="getGroupsOrRecords()" t-as="groupOrRecord" t-key="groupOrRecord.key or `empty_${groupOrRecord_index}`"> <!-- FIXME -->
                <t t-if="groupOrRecord.group">
                    <t t-set="group" t-value="groupOrRecord.group" />
                    <div class="o_kanban_group"
                        t-att-class="getGroupClasses(group)"
                        t-att-data-id="(canResequenceRecords or canResequenceGroups) and group.id"
                        t-on-click="(ev) => this.onGroupClick(group, ev)"
                    >
                        <div class="o_kanban_header">
                            <div class="o_kanban_header_title">
                                <span class="o_column_title" t-esc="getGroupName(group)" />
                                <t t-if="!group.isFolded">
                                    <Dropdown class="'o_kanban_config'" togglerClass="'btn p-0'">
                                        <t t-set-slot="toggler">
                                            <i class="fa fa-gear" role="img" aria-label="Settings" title="Settings" />
                                        </t>
                                        <DropdownItem class="{
                                                'o_kanban_toggle_fold': true,
                                                'o_sample_data_disabled disabled': props.list.model.useSampleModel,
                                            }" onSelected="() => this.toggleGroup(group)">
                                            Fold
                                        </DropdownItem>
                                        <t t-if="canEditGroup(group)">
                                            <DropdownItem class="'o_column_edit'" onSelected="() => this.editGroup(group)">
                                                Edit Stage
                                            </DropdownItem>
                                        </t>
                                        <t t-if="canDeleteGroup(group)">
                                            <DropdownItem class="'o_column_delete'" onSelected="() => this.deleteGroup(group)">
                                                Delete
                                            </DropdownItem>
                                        </t>
                                        <t t-if="canArchiveGroup(group)">
                                            <DropdownItem class="'o_column_archive_records'" onSelected="() => this.archiveGroup(group)">
                                                Archive All
                                            </DropdownItem>
                                            <DropdownItem class="'o_column_unarchive_records'" onSelected="() => this.unarchiveGroup(group)">
                                                Unarchive All
                                            </DropdownItem>
                                        </t>
                                    </Dropdown>
                                    <span t-if="props.list.canQuickCreate()" class="o_kanban_quick_add" t-on-click="() => props.list.quickCreate(group)">
                                        <i class="fa fa-plus" role="img" aria-label="Quick add" title="Quick add" />
                                    </span>
                                </t>
                                <span t-else="" class="o_column_unfold">
                                    <i class="fa fa-arrows-h" role="img" aria-label="Unfold" title="Unfold" />
                                </span>
                            </div>
                            <div t-if="!group.isFolded and group.progressValues.length" class="o_kanban_counter">
                                <div class="o_kanban_counter_progress progress">
                                    <t t-foreach="group.progressValues" t-as="progressData" t-key="progressData.color">
                                        <div t-if="progressData.count or progressData.color === 'muted'"
                                            role="progressbar"
                                            class="progress-bar o_bar_has_records"
                                            t-att-class="{ 'progress-bar-animated progress-bar-striped': group.activeProgressValue === progressData.value }"
                                            t-attf-class="bg-{{ progressData.color }}"
                                            t-attf-style="width: {{ progressData.count / group.count * 100 }}%;"
                                            aria-valuemin="0"
                                            t-att-aria-valuemax="group.count"
                                            t-att-aria-valuenow="progressData.count"
                                            t-attf-data-tooltip="{{ progressData.count }} {{ progressData.string }}"
                                            data-tooltip-delay="0"
                                            t-on-click="() => group.filterProgressValue(progressData.value)"
                                        />
                                    </t>
                                </div>
                                <t t-set="aggregate" t-value="getGroupAggregate(group)" />
                                <KanbanAnimatedNumber
                                    value="aggregate.value"
                                    title="aggregate.title"
                                    duration="1000"
                                    currency="aggregate.currency"
                                    animationClass="aggregate.value > 999 ? 'o_kanban_grow' : 'o_kanban_grow_huge'"
                                />
                            </div>
                        </div>
                        <t t-if="!group.isFolded">
                            <t t-foreach="group.list.records" t-as="record" t-key="record.id">
                                <div t-if="record.isInQuickCreation and props.list.quickCreateInfo"
                                    class="o_kanban_quick_create"
                                    t-att-class="{ o_disabled: state.quickCreateDisabled }"
                                    t-on-keydown="(ev) => this.onQuickCreateKeydown(group, ev)"
                                >
                                    <FormRenderer class="'o_form_view o_xxs_form_view'" record="record" fields="props.fields" info="props.list.quickCreateInfo" />
                                    <div class="d-flex">
                                        <button class="btn btn-primary o_kanban_add mr-1 text_truncate" t-on-click="() => this.validateQuickCreate(group, false)">
                                            Add
                                        </button>
                                        <button class="btn btn-primary o_kanban_edit mr-1 text_truncate" t-on-click="() => this.validateQuickCreate(group, true)">
                                            Edit
                                        </button>
                                        <button class="btn btn-secondary o_kanban_cancel ml-auto" t-on-click="() => this.cancelQuickCreate(group)">
                                            <i class="fa fa-trash" />
                                        </button>
                                    </div>
                                </div>
                                <t t-else="" t-call="{{ cardTemplate }}">
                                    <t t-set="isSample" t-value="props.list.model.useSampleModel"/>
                                </t>
                            </t>
                            <t t-set="unloadedCount" t-value="getGroupUnloadedCount(group)" />
                            <div t-if="unloadedCount > 0" class="o_kanban_load_more">
                                <a href="#" t-on-click="() => this.loadMore(group)">
                                    Load more... (<t t-esc="unloadedCount" /> remaining)
                                </a>
                            </div>
                        </t>
                    </div>
                </t>
                <t t-else="">
                    <t t-call="{{ cardTemplate }}">
                        <t t-set="record" t-value="groupOrRecord.record" />
                        <t t-set="isSample" t-value="props.list.model.useSampleModel"/>
                    </t>
                </t>
            </t>
            <t t-if="props.list.isGrouped">
                <div t-if="canCreateGroup()" class="o_column_quick_create">
                    <div t-if="state.quickCreateGroup" class="o_quick_create_unfolded">
                        <div class="o_kanban_header">
                            <div class="input-group">
                                <input type="text"
                                    class="form-control o_input"
                                    placeholder="Column title"
                                    t-ref="autofocus"
                                    t-model.trim="state.newGroup"
                                    t-on-focus="() => state.quickCreateGroupInputFocus = true"
                                    t-on-blur="() => state.quickCreateGroupInputFocus = false"
                                    t-on-keydown="onAddGroupKeydown"
                                />
                                <span class="input-group-append">
                                    <button class="btn btn-primary o_kanban_add" type="button" t-on-click="createGroup">
                                        Add
                                    </button>
                                </span>
                            </div>
                            <span t-if="state.quickCreateGroupInputFocus" class="o_discard_msg text-muted float-right">
                                Esc to discard
                            </span>
                            <t t-if="exampleData and !env.isSmall">
                                <button type="button" class="btn btn-link o_kanban_examples" t-on-click="showExamples">See examples</button>
                            </t>
                        </div>
                        <div t-foreach="[,,,]" t-as="i" t-key="i_index" class="o_kanban_muted_record" />
                    </div>
                    <div t-else="" class="o_quick_create_folded" t-on-click="() => state.quickCreateGroup = true">
                        <span class="o_kanban_add_column">
                            <i class="fa fa-plus" role="img" aria-label="Add column" title="Add column" />
                        </span>
                        <span class="o_kanban_title">Add a Column</span>
                    </div>
                </div>
                <!-- Kanban Example Background -->
                <div t-if="props.list.groups.length === 0" class="o_kanban_example_background_container">
                    <div class="o_kanban_example_background">
                        <div class="o_kanban_examples">
                            <div t-foreach="ghostColumns" t-as="column" t-key="column" class="o_kanban_examples_group">
                                <h6><b t-esc="column.name"/></h6>
                                <div t-foreach="column.cards" t-as="card" t-key="card_index" class="o_kanban_examples_ghost">
                                    <div class="o_ghost_content"/>
                                    <div class="o_ghost_content o_ghost_tag"/>
                                    <!-- FIXME WOWL example avatar is white on white (also in legacy) -->
                                    <img class="float-right o_ghost_avatar" src="/base/static/img/avatar.png" alt="Avatar"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </t>
            <t t-else="">
                <!-- kanban ghost cards are used to properly space last elements. -->
                <div t-foreach="[,,,,,,]" t-as="i" t-key="i_index" class="o_kanban_record o_kanban_ghost" />
            </t>
            <t t-if="showNoContentHelper">
                <t t-if="props.noContentHelp" t-call="web.ActionHelper">
                    <t t-set="noContentHelp" t-value="props.noContentHelp"/>
                </t>
                <t t-else="" t-call="web.NoContentHelper"/>
            </t>
        </div>
    </t>

    <!-- Note: this dialog isn't responsive, but it is not accessible on mobile -->
    <t t-name="web.KanbanExamplesDialog" owl="1">
        <div class="o_kanban_examples_dialog_nav">
            <ul class="nav nav-pills flex-column" t-ref="navList">
                <li t-foreach="props.examples" t-as="example" t-key="example_index" class="nav-item">
                    <a t-attf-aria-controls="example_{{example_index}}" data-toggle="tab" role="tab" t-att-data-example-index="example_index" t-attf-href="#example_{{example_index}}" t-attf-class="nav-link{{example_index == 0 and ' active' or ''}}" t-esc="example.name"/>
                </li>
            </ul>
        </div>
        <div class="o_kanban_examples_dialog_content">
            <div class="tab-content">
                <div t-foreach="props.examples" t-as="example" t-key="example_index" role="tabpanel" t-attf-id="example_{{example_index}}" t-attf-class="tab-pane {{example_index == 0 and 'active in' or ''}}">
                    <div t-if="example.description" class="o_kanban_examples_description" t-out="example.description"/>
                    <div class="o_kanban_examples">
                        <t t-foreach="example.columns" t-as="column" t-key="column">
                            <div class="o_kanban_examples_group">
                                <h6><b t-esc="column"/></h6>
                                <div t-foreach="random(1,4)" t-as="num" t-key="num_index" class="o_kanban_examples_ghost">
                                    <div class="o_ghost_content"/>
                                    <div class="o_ghost_content o_ghost_tag"/>
                                    <!-- FIXME WOWL random(0, 5 and _.sample) -->
                                    <t t-if="example.bullets and random(0, 5) > 3" t-out="_.sample(example.bullets)"/>
                                    <img class="float-right o_ghost_avatar" src="/base/static/img/avatar.png" alt="Avatar"/>
                                </div>
                            </div>
                        </t>
                    </div>
                </div>
            </div>
        </div>
    </t>
    <t t-name="web.KanbanExamplesDialogFooter" owl="1">
        <button class="btn btn-primary" t-on-click="applyExamples" t-esc="props.applyExamplesText"/>
        <button class="btn btn-secondary" t-on-click="close">Close</button>
    </t>

</templates>
