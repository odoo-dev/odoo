<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="web.KanbanRenderer" owl="1">
        <div class="o_kanban_renderer"
            t-att-class="{ o_kanban_sortable: canResequenceRecords }"
            t-attf-class="o_kanban_{{ props.list.isGrouped ? '' : 'un' }}grouped {{ props.archInfo.className or '' }}"
            t-ref="root"
        >
            <t t-foreach="getGroupsOrRecords()" t-as="groupOrRecord" t-key="groupOrRecord.key">
                <t t-if="groupOrRecord.group">
                    <t t-set="group" t-value="groupOrRecord.group" />
                    <div class="o_kanban_group"
                        t-att-class="getGroupClasses(group)"
                        t-att-data-id="(canResequenceRecords or canResequenceGroups) and group.id"
                        t-on-click="(ev) => this.onGroupClick(group, ev)"
                    >
                        <div class="o_kanban_header">
                            <div class="o_kanban_header_title" t-att="tooltipAttributes(group)">
                                <span class="o_column_title" t-esc="getGroupName(group)"/>
                                <t t-if="!group.isFolded">
                                    <Dropdown class="'o_kanban_config'" togglerClass="'btn p-0'">
                                        <t t-set-slot="toggler">
                                            <i class="fa fa-gear" role="img" aria-label="Settings" title="Settings" />
                                        </t>
                                        <DropdownItem class="{
                                                'o_kanban_toggle_fold': true,
                                                'o_sample_data_disabled disabled': props.list.model.useSampleModel,
                                            }" onSelected="() => this.toggleGroup(group)">
                                            Fold
                                        </DropdownItem>
                                        <t t-if="canEditGroup(group)">
                                            <DropdownItem class="'o_column_edit'" onSelected="() => this.editGroup(group)">
                                                Edit Stage
                                            </DropdownItem>
                                        </t>
                                        <t t-if="canDeleteGroup(group)">
                                            <DropdownItem class="'o_column_delete'" onSelected="() => this.deleteGroup(group)">
                                                Delete
                                            </DropdownItem>
                                        </t>
                                        <t t-if="canArchiveGroup(group)">
                                            <DropdownItem class="'o_column_archive_records'" onSelected="() => this.archiveGroup(group)">
                                                Archive All
                                            </DropdownItem>
                                            <DropdownItem class="'o_column_unarchive_records'" onSelected="() => this.unarchiveGroup(group)">
                                                Unarchive All
                                            </DropdownItem>
                                        </t>
                                    </Dropdown>
                                    <span t-if="props.list.canQuickCreate()" class="o_kanban_quick_add" t-on-click="() => this.quickCreate(group)">
                                        <i class="fa fa-plus" role="img" aria-label="Quick add" title="Quick add" />
                                    </span>
                                </t>
                                <span t-else="" class="o_column_unfold">
                                    <i class="fa fa-arrows-h" role="img" aria-label="Unfold" title="Unfold" />
                                </span>
                            </div>
                            <div t-if="!group.isFolded and group.progressBars.length" class="o_kanban_counter">
                                <div class="o_kanban_counter_progress progress">
                                    <t t-foreach="group.progressBars" t-as="progressBar" t-key="progressBar.color">
                                        <div t-if="progressBar.count"
                                            role="progressbar"
                                            class="progress-bar o_bar_has_records"
                                            t-att-class="{ 'progress-bar-animated progress-bar-striped': group.progressValue.active === progressBar.value }"
                                            t-attf-class="bg-{{ progressBar.color }}"
                                            t-attf-style="width: {{ progressBar.count / (group.count or 1) * 100 }}%;"
                                            aria-valuemin="0"
                                            t-att-aria-valuemax="group.count"
                                            t-att-aria-valuenow="progressBar.count"
                                            t-attf-data-tooltip="{{ progressBar.count }} {{ progressBar.string }}"
                                            data-tooltip-delay="0"
                                            t-on-click="() => group.filterProgressValue(progressBar.value)"
                                        />
                                    </t>
                                </div>
                                <t t-set="aggregate" t-value="getGroupAggregate(group)" />
                                <KanbanAnimatedNumber
                                    value="aggregate.value"
                                    title="aggregate.title"
                                    duration="1000"
                                    currency="aggregate.currency"
                                    animationClass="aggregate.value > 999 ? 'o_kanban_grow' : 'o_kanban_grow_huge'"
                                />
                            </div>
                        </div>
                        <t t-if="!group.isFolded">
                            <t t-foreach="group.list.records" t-as="record" t-key="record.id">
                                <t t-if="record.isInQuickCreation and props.list.quickCreateInfo">
                                    <KanbanRecordQuickCreate
                                        record="record"
                                        archInfo="props.list.quickCreateInfo"
                                        onCancel="force => group.list.cancelQuickCreate(force)"
                                        onValidate="mode => this.validateQuickCreate(mode, group)"
                                    />
                                </t>
                                <t t-else="" t-call="{{ cardTemplate }}">
                                    <t t-set="context" t-value="record.context"/>
                                    <t t-set="isSample" t-value="props.list.model.useSampleModel"/>
                                </t>
                            </t>
                            <t t-set="unloadedCount" t-value="getGroupUnloadedCount(group)" />
                            <div t-if="unloadedCount > 0" class="o_kanban_load_more">
                                <a href="#" t-on-click="() => this.loadMore(group)">
                                    Load more... (<t t-esc="unloadedCount" /> remaining)
                                </a>
                            </div>
                        </t>
                    </div>
                </t>
                <t t-else="">
                    <t t-call="{{ cardTemplate }}">
                        <t t-set="record" t-value="groupOrRecord.record" />
                        <t t-set="context" t-value="record.context"/>
                        <t t-set="isSample" t-value="props.list.model.useSampleModel"/>
                    </t>
                </t>
            </t>
            <t t-if="props.list.isGrouped">
                <t t-if="canCreateGroup()">
                    <KanbanColumnQuickCreate
                        folded="state.columnQuickCreateIsFolded"
                        onFoldChange="folded => state.columnQuickCreateIsFolded = props.list.groups.length > 0 and folded"
                        onValidate="name => props.list.createGroup(name)"
                        exampleData="exampleData"
                    />
                </t>
                <!-- Kanban Example Background -->
                <div t-if="props.list.groups.length === 0" class="o_kanban_example_background_container">
                    <div class="o_kanban_example_background">
                        <div class="o_kanban_examples">
                            <div t-foreach="ghostColumns" t-as="column" t-key="column" class="o_kanban_examples_group">
                                <h6><b t-esc="column.name"/></h6>
                                <div t-foreach="column.cards" t-as="card" t-key="card_index" class="o_kanban_examples_ghost">
                                    <div class="o_ghost_content"/>
                                    <div class="o_ghost_content o_ghost_tag"/>
                                    <!-- FIXME WOWL example avatar is white on white (also in legacy) -->
                                    <img class="float-right o_ghost_avatar" src="/base/static/img/avatar.png" alt="Avatar"/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </t>
            <t t-else="">
                <!-- kanban ghost cards are used to properly space last elements. -->
                <div t-foreach="[,,,,,,]" t-as="i" t-key="i_index" class="o_kanban_record o_kanban_ghost" />
            </t>
            <t t-if="showNoContentHelper">
                <t t-if="props.noContentHelp" t-call="web.ActionHelper">
                    <t t-set="noContentHelp" t-value="props.noContentHelp"/>
                </t>
                <t t-else="" t-call="web.NoContentHelper"/>
            </t>
        </div>
    </t>

    <t t-name="web.KanbanCoverImageDialog" owl="1">
        <SimpleDialog t-props="props" title="'Set a Cover Image'" size="'modal-lg'">
            <div t-if="attachments.length" class="o_kanban_cover_container bg-100">
                <t t-foreach="attachments" t-as="attachment" t-key="attachment.id">
                    <div class="o_kanban_cover_image position-relative d-inline-block m-2 bg-white" t-att-class="{
                        o_selected: state.selectedAttachmentId === attachment.id,
                    }">
                        <img t-attf-src="/web/image/{{attachment.id}}?unique=1" t-att-data-id="attachment.id" t-att-data-name="attachment.name" class="m-auto mw-100" alt="Attachment" t-on-click="() => this.selectAttachment(attachment)" t-on-dblclick="() => {this.selectAttachment(attachment); this.setCover();}"/>
                    </div>
                </t>
            </div>
            <t t-else="">There is no available image to be set as cover.</t>
            <div t-attf-class="d-none o_hidden_input_file {{fileupload_class}}" t-att-style="fileupload_style" aria-atomic="true">
                <form class="o_form_binary_form" t-att-target="id"
                    method="post" enctype="multipart/form-data" t-att-action="'/web/binary/upload_attachment'">
                    <input type="hidden" name="csrf_token" t-att-value="csrf_token"/>
                    <input type="hidden" name="callback" t-att-value="id"/>
                    <input type="file" class="o_input_file" name="ufile "
                        t-att="{'multiple': multi_upload ? 'multiple' : null, 'accept': 'image/*'}" t-ref="fileInput" t-on-change="upload"/>
                    <input type="hidden" name="model" t-att-value="props.record.resModel" />
                    <input type="hidden" name="id" t-att-value="props.record.resId" />
                </form>
                <iframe t-att-id="id" t-att-name="id" style="display: none"/>
            </div>
            <t t-set-slot="footer" t-slot-scope="dialog">
                <t t-if="attachments.length">
                    <button class="btn btn-primary" t-on-click="setCover" t-att-disabled="!state.selectedAttachmentId">Select</button>
                    <button class="btn btn-primary" t-on-click="uploadImage">Upload and Set</button>
                </t>
                <button t-if="coverId" class="btn btn-secondary" t-on-click="removeCover">Remove Cover Image</button>
                <button class="btn btn-secondary" t-on-click="dialog.close">Discard</button>
            </t>
        </SimpleDialog>
    </t>

    <t t-name="web.KanbanGroupTooltip" owl="1">
        <div>
            <t t-foreach="info" t-as="line" t-key="line_index">
                <t t-esc="line"/>
                <br t-if="!line_last"/>
            </t>
        </div>
    </t>

</templates>
