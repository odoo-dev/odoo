<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">

<t t-name="mail.chat_window" owl="1">
    <t t-set="chatWindow" t-value="props.chatWindow"/>
    <t t-set="thread" t-value="chatWindow.thread"/>
    <div class="o-mail-chat-window"
        t-attf-style="right:{{props.right}}px;"
        t-att-class="{
                'o-folded': props.chatWindow.folded,
                'position-absolute bottom-0 rounded-top-3 bg-view overflow-hidden d-flex flex-column': !props.chatWindow.hidden
                }"
        t-on-keydown="onKeydown"
    >
        <div class="o-mail-chat-window-header d-flex align-items-center cursor-pointer flex-shrink-0" t-on-click="toggleFold">
            <ChatWindowIcon t-if="thread" threadLocalId="thread.localId" className="'ms-3 me-1 my-0'" />
            <span class="o-mail-chat-window-header-name text-truncate" t-att-title="chatWindow.displayName" t-esc="chatWindow.displayName" t-att-class="{
                    'ms-3 me-1 my-0': !thread,
                }"
            />
            <div class="flex-grow-1"/>
            <div t-if="thread and thread !== rtc.state.channel" class="o-mail-command d-flex align-items-center h-100 px-3 py-0 m-0 opacity-50 opacity-100-hover" title="Start a Call" t-on-click.stop="() => this.rtc.toggleCall(this.props.chatWindow.thread)">
                <i class="fa fa-phone"/>
            </div>
            <t t-if="env.isSmall">
                <div t-if="thread and thread.type === 'channel'" class="o-mail-command d-flex align-items-center h-100 px-3 py-0 m-0 opacity-50 opacity-100-hover" t-att-title="state.activeMode === 'add-users' ? 'Stop adding users' : 'Add users'" t-on-click.stop="toggleAddUsers">
                    <i class="fa fa-lg fa-user-plus"/>
                </div>
            </t>
            <t t-if="thread">
                <div t-if="thread.type === 'channel'" class="o-mail-command d-flex align-items-center h-100 px-3 py-0 m-0 opacity-50 opacity-100-hover" t-att-title="state.activeMode === 'member-list' ? 'Hide Member List' : 'Show Member List'" t-on-click.stop="toggleMemberList">
                    <i class="fa fa-users"/>
                </div>
                <div class="o-mail-command d-flex align-items-center h-100 px-3 py-0 m-0 opacity-50 opacity-100-hover" title="Show Call Settings" t-on-click.stop="toggleSettings">
                    <i class="fa fa-gear"/>
                </div>
                <t t-if="!env.isSmall">
                    <div class="o-mail-command d-flex align-items-center h-100 px-3 py-0 m-0 opacity-50 opacity-100-hover" title="Open in Discuss" t-on-click.stop="expand">
                        <i class="fa fa-expand"/>
                    </div>
                </t>
            </t>
            <div class="o-mail-command d-flex align-items-center h-100 px-3 opacity-50 opacity-100-hover" title="Close chat window" t-on-click.stop="() => this.close()">
                <i class="fa fa-close"></i>
            </div>
        </div>
        <t t-if="!props.chatWindow.folded">
            <div class="o-mail-chat-window-content d-flex flex-column h-100 overflow-auto" t-ref="content">
                <t t-if="thread">
                    <t t-if="state.activeMode === 'in-settings'">
                        <CallSettings/>
                    </t>
                    <t t-elif="state.activeMode === 'member-list'">
                        <ChannelMemberList thread="thread" className="'o-mail-discuss-channel-member-list flex-shrink-0 border-start w-100 h-100'"/>
                    </t>
                    <t t-elif="state.activeMode === 'add-users'">
                        <ChannelInvitationForm threadId="thread.id" chatState="state"/>
                    </t>
                    <t t-else="">
                        <Call t-if="thread.rtcSessions.size > 0" thread="thread"/>
                        <Thread localId="thread.localId" t-key="thread.localId" messageHighlight="messageHighlight" messageInEditId="state.messageInEditId" resetMessageInEdit="resetMessageInEdit.bind(this)"/>
                        <Composer composer="thread.composer" autofocus="props.chatWindow.autofocus" mode="'compact'" highlightReplyTo="messageHighlight.highlightMessage" startEditingLastMessageOfCurrentUser="startEditingLastMessageOfCurrentUser.bind(this)" dropzoneRef="contentRef"/>
                    </t>
                </t>
                <div t-else="" class="d-flex align-items-center m-3">
                    <span class="flex-shrink-0 me-2">To :</span>
                    <ChannelSelector category="messaging.state.discuss.chats" onValidate="() => messaging.closeNewMessageChatWindow()" multiple="false" autofocus="true"/>
                </div>
            </div>
        </t>
    </div>
</t>

</templates>
