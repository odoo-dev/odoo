<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">

    <t t-name="mail.message" owl="1">
        <div class="o-mail-message position-relative py-1 mt-1 px-3"
            t-att-class="{
                'o-highlighted bg-view shadow-lg': props.highlighted,
                'o-mail-is-author': message.isSelfAuthored,
                'opacity-50': props.grayedOut,
            }"
            t-att-data-message-id="message.id"
            t-on-click="onClick"
            t-ref="ref"
        >
            <MessageInReplyTo t-if="message.parentMessage" alignedRight="isAlignedRight" message="message" onClick="props.onParentMessageClick"/>
            <div class="o-mail-message-core position-relative d-flex flex-shrink-0">
                <div class="o-mail-message-sidebar d-flex flex-shrink-0" t-att-class="{ 'justify-content-end': isAlignedRight }">
                    <div t-if="!props.squashed" class="o-mail-avatar-container position-relative bg-view">
                        <img class="w-100 h-100 rounded-circle o_object_fit_cover o_redirect"
                            t-att-src="avatarUrl"
                            t-att-class="{ 'cursor-pointer': hasOpenChatFeature }"
                            t-on-click="openChatAvatar" />
                        <PartnerImStatus t-if="message.author" partner="message.author" className="'position-absolute bottom-0 end-0'"/>
                    </div>
                    <t t-elif="!message.isTransient">
                        <small class="o-mail-message-date text-muted opacity-0 ms-2" t-att-title="message.dateTimeStr">
                            <t t-esc="message.dateTimeSimpleStr"/>
                        </small>
                        <div t-att-class="{ 'position-absolute bottom-0 mb-1': !env.inChatter }">
                            <MessageSeenIndicator
                                t-if="props.message.isSelfAuthored and props.thread"
                                message="props.message"
                                thread="props.thread"/>
                        </div>
                    </t>
                </div>
                <div class="flex-grow-1">
                    <div t-if="!props.squashed" class="o-mail-msg-header d-flex flex-wrap align-items-baseline">
                        <span t-if="message.author and shouldDisplayAuthorName" class="o-mail-own-name">
                            <strong class="o_redirect me-1 text-truncate" t-att-class="{ 'cursor-pointer': hasOpenChatFeature }" t-on-click="openChatAvatar">
                            <t t-esc="message.author.name"/>
                            </strong>
                        </span>
                        <small t-if="!message.isTransient" class="o-mail-message-date text-muted opacity-50" t-att-class="{ 'me-2': !isAlignedRight }" t-att-title="message.dateTimeStr">
                            <t t-if="shouldDisplayAuthorName">-</t>
                            <RelativeTime datetime="message.dateTime" />
                        </small>
                        <MessageSeenIndicator
                            t-if="props.message.isSelfAuthored and !props.isSquashed and props.thread"
                            className="'ms-1'"
                            message="props.message"
                            thread="props.thread"/>
                        <small t-if="!isOriginThread and !message.isTransient" t-on-click.prevent="openRecord" class="o-mail-message-recod-name ms-1 text-500">
                            <t t-if="message.resModel !== 'mail.channel'">
                                on <a t-att-href="message.url"><t t-esc="message.originThread?.displayName"/></a>
                            </t>
                            <t t-if="message.resModel === 'mail.channel'">
                                (from <a t-att-href="message.url">#<t t-esc="message.originThread?.displayName"/></a>)
                            </t>
                        </small>
                        <div t-if="message.notifications.length > 0" t-att-class="{ 'ms-2': !isAlignedRight }">
                            <span t-if="message.failureNotifications.length > 0" class="o-mail-message-notification-icon-clickable cursor-pointer text-danger" role="button" tabindex="0" t-on-click="onClickFailure">
                                <i class="o-mail-message-notification-icon" t-att-class="message.notifications[0].icon" role="img" aria-label="Delivery failure"/> <span t-if="message.notifications[0].label" t-out="message.notifications[0].label"/>
                            </span>
                            <span t-else="" class="o-mail-message-notification-icon-clickable text-600 cursor-pointer" t-on-click="onClickNotificationIcon" t-ref="notificationIcon">
                                <i class="o-mail-message-notification-icon" t-att-class="message.notifications[0].icon" role="img" aria-label="Delivery failure"/> <span t-if="message.notifications[0].label" t-out="message.notifications[0].label"/>
                            </span>
                        </div>
                    </div>
                    <div t-if="!state.isEditing" class="o-mail-message-content d-flex position-relative">
                        <t name="hasTrackingValue" t-if="(message.type === 'notification' or message.isTransient) and !message.isBodyEmpty">
                            <t t-if="message.subtype_description">
                                <p class="mb-0"><t t-esc="message.subtype_description"/></p>
                            </t>
                            <t t-if="message.trackingValues.length">
                                <t t-call="mail.tracking_values"/>
                            </t>
                            <div t-if="message.body" class="o-mail-message-body text-break mb-0 bg-view">
                                <t t-out="message.body"/>
                            </div>
                        </t>
                        <t t-if="message.type !== 'notification' and !message.isTransient and !message.isBodyEmpty">
                            <div class="o-mail-message-bubble-wrap position-relative">
                                <div class="o-mail-message-bubble border rounded-end-3 rounded-bottom-3 position-absolute top-0 start-0 w-100 h-100" t-att-class="{
                                        'bg-info-light border-info': !message.isSelfAuthored,
                                        'bg-success-light border-success opacity-25': message.isSelfAuthored,
                                    }"/>
                                <div class="position-relative" t-att-class="{
                                    'p-1': message.isNote,
                                    'o-mail-message-body align-self-start text-break mb-0 rounded-end-3 rounded-bottom-3 p-3': !message.isNote,
                                    'flex-grow-1': state.isEditing,
                                }">
                                    <em t-if="message.subject and !message.isSubjectSimilarToOriginThreadName" class="o-mail-message-subject mb-1 me-2">Subject: <t t-esc="message.subject"/></em>
                                    <t t-out="message.body"/>
                                </div>
                            </div>
                        </t>
                        <div t-if="props.hasActions and !message.isTransient" class="o-mail-message-actions bg-view invisible"
                            t-att-class="{
                                'position-absolute top-0': !env.inDiscuss,
                                'start-0 ms-3': isAlignedRight,
                                'end-0 me-3': env.inChatWindow and !isAlignedRight or env.inChatter,
                                'mt-n4': env.inChatter and (message.isDiscussion or message.isNotification),
                                'mt-n5': env.inChatter and !(message.isDiscussion or message.isNotification),
                                'mt-2': env.inDiscuss and (message.isDiscussion or message.isNotification),
                                'mt-n3': env.inChatWindow,
                                'ms-2': env.inDiscuss,
                            }"
                        >
                            <div class="d-flex rounded-1 shadow-sm overflow-hidden alignedRight" t-att-class="{
                                    'mt-3': env.inChatter and !(message.isDiscussion or message.isNotification),
                                    'flex-row-reverse': env.inChatWindow and isAlignedRight,
                                }"
                            >
                                <i t-if="canAddReaction" class="o-mail-message-action-add-reaction cursor-pointer px-1 py-2 fa fa-lg fa-smile-o"
                                    role="button" tabindex="1" title="Add a Reaction" aria-label="Add a Reaction" t-ref="emoji-picker"/>
                                <i t-if="env.inChatWindow" class="cursor-pointer px-1 py-2 fa fa-lg fa-ellipsis-h order-1"
                                    t-on-click="() => state.isActionListSquashed = !state.isActionListSquashed" role="button" tabindex="1" title="Compact" aria-label="Compact"/>
                                <t t-if="!env.inChatWindow or !state.isActionListSquashed">
                                    <i t-if="canToggleStar" class="o-mail-message-action-toggle-star cursor-pointer px-1 py-2 fa fa-lg"
                                        t-att-class="message.isStarred ? 'fa-star' : 'fa-star-o'"
                                        t-on-click="() => messageService.toggleStar(props.message)"
                                        role="button" tabindex="0" title="Mark as Todo" aria-label="Mark as Todo"/>
                                    <i t-if="canBeDeleted" class="cursor-pointer px-1 py-2 fa fa-lg fa-trash" t-on-click="onClickDelete"
                                        role="button" tabindex="0" title="Delete" aria-label="Delete"/>
                                    <i t-if="canBeEdited" class="cursor-pointer px-1 py-2 fa fa-lg fa-pencil" t-on-click="onClickEdit"
                                        role="button" tabindex="1" title="Edit" aria-label="Edit"/>
                                    <i t-if="canReplyTo" class="o-mail-message-action-reply-to cursor-pointer px-1 py-2 fa fa-lg fa-reply" t-on-click.stop="onClickReplyTo"
                                        role="button" tabindex="1" title="Reply" aria-label="Reply"/>
                                    <i t-if="isInInbox" class="o-mail-message-action-mark-read cursor-pointer px-1 py-2 fa fa-lg fa-check" t-on-click="() => messageService.setDone(props.message)"
                                        role="button" tabindex="0" title="Mark as Read" aria-label="Mark as Read"/>
                                </t>
                            </div>
                        </div>
                    </div>
                    <div t-else="" class="position-relative">
                        <div class="o-mail-message-bubble border rounded-end-3 rounded-bottom-3 position-absolute top-0 start-0 w-100 h-100" t-att-class="{
                                'bg-info-light border-info': !message.isSelfAuthored,
                                'bg-success-light border-success opacity-25': message.isSelfAuthored,
                            }"/>
                        <div class="o-mail-message-editable-content position-relative flex-grow-1" t-att-class="{
                            'p-1': message.isNote,
                            'o-mail-message-body mb-0 p-3': !message.isNote,
                        }">
                            <Composer autofocus="true" composer="message.composer" messageComponent="constructor" onDiscardCallback.bind="exitEditMode" onPostCallback.bind="exitEditMode" mode="'compact'"/>
                        </div>
                    </div>
                    <AttachmentList
                        t-if="message.attachments.length > 0"
                        attachments="message.attachments"
                        unlinkAttachment.bind="onClickAttachmentUnlink"
                        imagesHeight="300" />
                    <LinkPreviewList t-if="message.linkPreviews.length > 0" linkPreviews="message.linkPreviews" canBeDeleted="canBeDeleted" />
                    <MessageReactions message="message"/>
                </div>
            </div>
        </div>
    </t>

    <t t-name="mail.tracking_values" owl="1">
        <ul class="mb-0 ps-4">
            <t name="trackingValues" t-foreach="message.trackingValues" t-as="trackingValue" t-key="trackingValue.id">
                <li>
                    <span class="fw-bold" t-esc="trackingValue.oldValue.value"/>
                    <i class="fa fa-long-arrow-right mx-1 text-600" />
                    <span class="text-info fw-bold" t-esc="trackingValue.newValue.value"/> (<t t-esc="trackingValue.changedField"/>)
                </li>
            </t>
        </ul>
    </t>

</templates>
