<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="mail.messaging.component.Discuss" owl="1">
        <div class="o_Discuss"
            t-att-class="{
                'o-adding-item': discuss.isAddingChannel or discuss.isAddingChat,
                'o-mobile': env.entities.Device.instance.isMobile,
            }"
        >
            <t t-if="!env.entities.Messaging.instance.isInitialized">
                <div class="o_Discuss_messagingNotInitialized"><i class="o_Discuss_messagingNotInitializedIcon fa fa-spinner fa-spin"/>Please wait...</div>
            </t>
            <t t-else="">
                <t t-if="!env.entities.Device.instance.isMobile">
                    <DiscussSidebar class="o_Discuss_sidebar"/>
                </t>
                <t t-if="env.entities.Device.instance.isMobile" t-call="mail.messaging.component.Discuss.Content"/>
                <t t-else="">
                    <div class="o_Discuss_content">
                        <t t-call="mail.messaging.component.Discuss.Content"/>
                    </div>
                </t>
            </t>

            <t t-if="discuss.hasModerationDiscardDialog">
                <ModerationDiscardDialog messages="discuss.threadViewer.checkedMessages.map(message => message.localId)" t-on-dialog-closed="_onDialogClosedModerationDiscard"/>
            </t>
            <t t-if="discuss.hasModerationRejectDialog">
                <ModerationRejectDialog messages="discuss.threadViewer.checkedMessages.map(message => message.localId)" t-on-dialog-closed="_onDialogClosedModerationReject"/>
            </t>
        </div>
    </t>

    <t t-name="mail.messaging.component.Discuss.Content" owl="1">
        <t t-if="env.entities.Device.instance.isMobile and discuss.activeMobileNavbarTabId === 'mailbox'">
            <DiscussMobileMailboxSelection class="o_Discuss_mobileMailboxSelection"/>
        </t>
        <t t-if="env.entities.Device.instance.isMobile and (discuss.isAddingChannel or discuss.isAddingChat)">
            <div class="o_Discuss_mobileAddItemHeader">
                <AutocompleteInput
                    class="o_Discuss_mobileAddItemHeaderInput"
                    isFocusOnMount="true"
                    isHtml="discuss.isAddingChannel"
                    placeholder="discuss.isAddingChannel ? addChannelInputPlaceholder : addChatInputPlaceholder"
                    select="_onMobileAddItemHeaderInputSelect"
                    source="_onMobileAddItemHeaderInputSource"
                    t-on-o-hide="_onHideMobileAddItemHeader"
                />
            </div>
        </t>
        <t t-if="(env.entities.Device.instance.isMobile and discuss.activeMobileNavbarTabId === 'mailbox' and discuss.thread and discuss.thread.model === 'mail.box') or (!env.entities.Device.instance.isMobile and discuss.thread)">
            <ThreadViewer
                class="o_Discuss_thread"
                t-att-class="{ 'o-mobile': env.entities.Device.instance.isMobile }"
                composerAttachmentsDetailsMode="'card'"
                hasComposer="discuss.thread.model !== 'mail.box'"
                hasComposerCurrentPartnerAvatar="!env.entities.Device.instance.isMobile"
                hasMessageCheckbox="true"
                hasSquashCloseMessages="discuss.thread.model !== 'mail.box'"
                haveMessagesAuthorRedirect="discuss.thread.channel_type !== 'chat'"
                haveMessagesMarkAsReadIcon="discuss.thread.model === 'mail.box' and discuss.thread.id === 'inbox'"
                haveMessagesReplyIcon="discuss.thread.model === 'mail.box' and discuss.thread.id === 'inbox'"
                selectedMessage="
                    discuss.replyingToMessage and
                    discuss.replyingToMessage.localId"
                threadViewer="discuss.threadViewer.localId"
                t-on-o-rendered="_onThreadRendered"
            />
        </t>
        <t t-if="!discuss.thread and (!env.entities.Device.instance.isMobile or discuss.activeMobileNavbarTabId === 'mailbox')">
            <div class="o_Discuss_noThread">
                No conversation selected.
            </div>
        </t>
        <t t-if="env.entities.Device.instance.isMobile and discuss.activeMobileNavbarTabId !== 'mailbox'">
            <NotificationList
                class="o_Discuss_notificationList"
                filter="discuss.activeMobileNavbarTabId"
                t-on-o-select-thread="_onSelectThread"
            />
        </t>
        <t t-if="env.entities.Device.instance.isMobile and !discuss.isReplyingToMessage">
            <MobileMessagingNavbar
                class="o_Discuss_mobileNavbar"
                activeTabId="discuss.activeMobileNavbarTabId"
                tabs="mobileNavbarTabs()"
                t-on-o-select-mobile-messaging-navbar-tab="_onSelectMobileNavbarTab"
            />
        </t>
        <t t-if="discuss.isReplyingToMessage">
            <Composer
                class="o_Discuss_replyingToMessageComposer"
                composer="discuss.replyingToMessage.originThread.composer.localId"
                hasCurrentPartnerAvatar="!env.entities.Device.instance.isMobile"
                hasDiscardButton="true"
                hasThreadName="true"
                isDiscardOnClickAway="true"
                isFocusOnMount="true"
                t-on-o-message-posted="_onReplyingToMessageMessagePosted"
            />
        </t>
    </t>

    <!--
        @param {string} searchVal
    -->
    <t t-name="mail.messaging.component.Discuss.AutocompleteChannelPrivateItem" owl="1">
        <strong>Create <em><span class="fa fa-lock"/><t t-esc="searchVal"/></em></strong>
    </t>

    <!--
        @param {string} searchVal
    -->
    <t t-name="mail.messaging.component.Discuss.AutocompleteChannelPublicItem" owl="1">
        <strong>Create <em><span class="fa fa-hashtag"/><t t-esc="searchVal"/></em></strong>
    </t>

</templates>
