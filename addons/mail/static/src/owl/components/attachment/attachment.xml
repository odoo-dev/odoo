<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <t t-name="mail.component.Attachment" owl="1">
        <div class="o_Attachment"
            t-att-class="{
                'o-downloadable': props.isDownloadable,
                'o-editable': props.isEditable,
                'o-has-card-details': detailsMode === 'card',
                'o-temporary': storeProps.attachment.isTemporary,
                'o-viewable': env.store.getters.isAttachmentViewable(props.attachmentLocalId),
            }" t-att-title="env.store.getters.attachmentDisplayName(props.attachmentLocalId)" t-att-data-attachment-local-id="storeProps.attachment.localId"
        >
            <!-- Image style-->
            <!-- o_image from mimetype.scss -->
            <div class="o_Attachment_image o_image" t-on-click="_onClickImage"
                t-att-class="{
                    'o-attachment-viewable': env.store.getters.isAttachmentViewable(props.attachmentLocalId),
                    'o-details-overlay': detailsMode !== 'card'
                }" t-att-href="attachmentUrl" t-att-style="imageStyle" t-att-data-mimetype="storeProps.attachment.mimetype"
            >
                <t t-if="(props.showFilename or props.showExtension) and detailsMode === 'hover'">
                    <div class="o_Attachment_imageOverlay">
                        <div class="o_Attachment_details o_Attachment_imageOverlayDetails">
                            <t t-if="props.showFilename">
                                <div class="o_Attachment_filename">
                                    <t t-esc="storeProps.attachment.filename"/>
                                </div>
                            </t>
                            <t t-if="props.showExtension">
                                <div class="o_Attachment_extension">
                                    <t t-esc="env.store.getters.attachmentExtension(props.attachmentLocalId)"/>
                                </div>
                            </t>
                        </div>
                        <div class="o_Attachment_actions">
                            <!-- Remove button -->
                            <t t-if="props.isEditable and !storeProps.attachment.isTemporary" t-key="'unlink'">
                                <div class="o_Attachment_action o_Attachment_actionUnlink"
                                    t-att-class="{
                                        'o-pretty': env.store.getters.isAttachmentLinkedToComposer(props.attachmentLocalId),
                                    }" t-on-click.stop="_onClickUnlink" aria-label="Remove" title="Remove"
                                >
                                    <i class="fa fa-times"/>
                                </div>
                            </t>
                            <!-- Download button -->
                            <t t-if="props.isDownloadable and !storeProps.attachment.isTemporary" t-key="'download'">
                                <div class="o_Attachment_action o_Attachment_actionDownload" t-on-click.stop="_onClickDownload" title="Download" aria-label="Download">
                                    <i class="fa fa-download"/>
                                </div>
                            </t>
                        </div>
                    </div>
                </t>
            </div>
            <!-- Attachment details -->
            <t t-if="(props.showFilename or props.showExtension) and detailsMode === 'card'">
                <div class="o_Attachment_details">
                    <t t-if="props.showFilename">
                        <div class="o_Attachment_filename">
                            <t t-esc="storeProps.attachment.filename"/>
                        </div>
                    </t>
                    <t t-if="props.showExtension">
                        <div class="o_Attachment_extension">
                            <t t-esc="env.store.getters.attachmentExtension(props.attachmentLocalId)"/>
                        </div>
                    </t>
                </div>
            </t>
            <!-- Attachment aside -->
            <t t-if="detailsMode !== 'hover' and (props.isDownloadable or props.isEditable)">
                <div class="o_Attachment_aside" t-att-class="{ 'o-has-multiple-action': !storeProps.attachment.isTemporary and props.isDownloadable and props.isEditable }">
                    <!-- Uploading icon -->
                    <t t-if="storeProps.attachment.isTemporary and env.store.getters.isAttachmentLinkedToComposer(props.attachmentLocalId)">
                        <div class="o_Attachment_asideItem o_Attachment_asideItemUploading" aria-label="Uploading" title="Uploading">
                            <i class="fa fa-spin fa-spinner"/>
                        </div>
                    </t>
                    <!-- Uploaded icon -->
                    <t t-if="!storeProps.attachment.isTemporary and env.store.getters.isAttachmentLinkedToComposer(props.attachmentLocalId)">
                        <div class="o_Attachment_asideItem o_Attachment_asideItemUploaded" title="Uploaded" aria-label="Uploaded">
                            <i class="fa fa-check"/>
                        </div>
                    </t>
                    <!-- Remove button -->
                    <t t-if="props.isEditable and !storeProps.attachment.isTemporary">
                        <div class="o_Attachment_asideItem o_Attachment_asideItemUnlink" t-att-class="{ 'o-pretty': env.store.getters.isAttachmentLinkedToComposer(props.attachmentLocalId) }" t-on-click="_onClickUnlink" title="Remove" aria-label="Remove">
                            <i class="fa fa-times"/>
                        </div>
                    </t>
                    <!-- Download button -->
                    <t t-if="props.isDownloadable and !storeProps.attachment.isTemporary">
                        <div class="o_Attachment_asideItem o_Attachment_asideItemDownload" t-on-click="_onClickDownload" title="Download" aria-label="Download">
                            <i class="fa fa-download"/>
                        </div>
                    </t>
                </div>
            </t>
        </div>
    </t>

</templates>
