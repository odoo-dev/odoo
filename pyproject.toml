[build-system]
requires = ["setuptools>=41"]
build-backend = "pep517_odoo"
backend-path = ["setup"]

[project]
name = "odoo"
dynamic = ["version"]
description = "Odoo Server"
authors = [
    {name = "Odoo S.A.", email = "info@odoo.com"}
]
readme = "README.md"
keywords = ["odoo", "framework"]
license = {file = "LICENSE"}
classifiers = [
    # https://pypi.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Programming Language :: Python :: 3",
]
# XXX requires-python should be parsed instead of trying to find odoo.MIN_PY_VERSION
# XXX these variables should also be moved to odoo/release.py
requires-python = ">=3.10"
dependencies = [
    'asn1crypto',
    'babel >= 1.0',
    'cbor2',
    'chardet',
    'cryptography',
    'decorator',
    'docutils',
    'geoip2',
    'gevent',
    'greenlet',
    'idna',
    'Jinja2',
    'lxml',  # windows binary http://www.lfd.uci.edu/~gohlke/pythonlibs/
    'libsass',
    'MarkupSafe',
    'num2words',
    'ofxparse',
    'openpyxl',
    'passlib',
    'pillow',  # windows binary http://www.lfd.uci.edu/~gohlke/pythonlibs/
    'polib',
    'psutil',  # windows binary code.google.com/p/psutil/downloads/list
    'psycopg2 >= 2.2',
    'pyopenssl',
    'PyPDF2',
    'pyserial',
    'python-dateutil',
    'python-stdnum',
    'pytz',
    'pyusb >= 1.0.0b1',
    'qrcode',
    'reportlab',  # windows binary pypi.python.org/pypi/reportlab
    'rjsmin',
    'requests',
    'urllib3',
    'vobject',
    'werkzeug',
    'xlrd',
    'xlsxwriter',
    'xlwt',
    'zeep',
]

[project.optional-dependencies]
ldap = ["python-ldap"]
test = [
    "freezegun==1.1.0 ; python_version < '3.11'",  # (Jammy)
    "freezegun==1.2.1 ; python_version >= '3.11'",
    "mypy~=1.11",  # XXX probably for later
    "ruff==0.6.5",
    "typing_extensions==4.4.0 ; python_version < '3.12'",
]
# XXX this replaces requirements.txt; install using `pip install -e .[pinned,test]`
pinned = [
    "asn1crypto==1.4.0 ; python_version < '3.11'",
    "asn1crypto==1.5.1 ; python_version >= '3.11'",
    "Babel==2.9.1 ; python_version < '3.11'",  # min version = 2.6.0 (Focal with security backports)
    "Babel==2.10.3 ; python_version >= '3.11'",
    "cbor2==5.4.2 ; python_version < '3.12'",
    "cbor2==5.6.2 ; python_version >= '3.12'",
    "chardet==4.0.0 ; python_version < '3.11'",  # (Jammy)
    "chardet==5.2.0 ; python_version >= '3.11'",
    "cryptography==3.4.8; python_version < '3.12'",  # incompatibility between pyopenssl 19.0.0 and cryptography>=37.0.0
    "cryptography==42.0.8 ; python_version >= '3.12'",  # (Noble) min 41.0.7, pinning 42.0.8 for security fixes
    "decorator==4.4.2  ; python_version < '3.11'",  # (Jammy)
    "decorator==5.1.1  ; python_version >= '3.11'",
    "docutils==0.17 ; python_version < '3.11'",  # (Jammy)
    "docutils==0.20.1 ; python_version >= '3.11'",
    "freezegun==1.1.0 ; python_version < '3.11'",  # (Jammy)
    "freezegun==1.2.1 ; python_version >= '3.11'",
    "geoip2==2.9.0",
    "gevent==21.8.0 ; sys_platform != 'win32' and python_version == '3.10'",  # (Jammy)
    "gevent==22.10.2; sys_platform != 'win32' and python_version > '3.10' and python_version < '3.12'",
    "gevent==24.2.1 ; sys_platform != 'win32' and python_version >= '3.12'",  # (Noble)
    "greenlet==1.1.2 ; sys_platform != 'win32' and python_version == '3.10'",  # (Jammy)
    "greenlet==2.0.2 ; sys_platform != 'win32' and python_version > '3.10' and python_version < '3.12'",
    "greenlet==3.0.3 ; sys_platform != 'win32' and python_version >= '3.12'",  # (Noble)
    "idna==2.10 ; python_version < '3.12'",  # requests 2.25.1 depends on idna<3 and >=2.5
    "idna==3.6 ; python_version >= '3.12'",
    "Jinja2==3.0.3 ; python_version <= '3.10'",
    "Jinja2==3.1.2 ; python_version > '3.10'",
    "libsass==0.20.1 ; python_version < '3.11'",
    "libsass==0.22.0 ; python_version >= '3.11'",  # (Noble) Mostly to have a wheel package
    "lxml==4.8.0 ; python_version <= '3.10'",
    "lxml==4.9.3 ; python_version > '3.10' and python_version < '3.12'", # min 4.9.2, pinning 4.9.3 because of missing wheels for darwin in 4.9.3
    "lxml==5.2.1; python_version >= '3.12'", # (Noble - removed html clean)
    "lxml-html-clean; python_version >= '3.12'", # (Noble - removed from lxml, unpinned for futur security patches)
    "MarkupSafe==2.0.1 ; python_version <= '3.10'",
    "MarkupSafe==2.1.2 ; python_version > '3.10' and python_version < '3.12'",
    "MarkupSafe==2.1.5 ; python_version >= '3.12'",  # (Noble) Mostly to have a wheel package
    "num2words==0.5.10 ; python_version < '3.12'",  # (Jammy / Bookworm)
    "num2words==0.5.13 ; python_version >= '3.12'", 
    "ofxparse==0.21",
    "openpyxl==3.0.9 ; python_version < '3.12'",
    "openpyxl==3.1.2 ; python_version >= '3.12'",
    "passlib==1.7.4",  # min version = 1.7.2 (Focal with security backports)
    "Pillow==9.0.1 ; python_version <= '3.10'",
    "Pillow==9.4.0 ; python_version > '3.10' and python_version < '3.12'",
    "Pillow==10.2.0 ; python_version >= '3.12'",  # (Noble) Mostly to have a wheel package
    "polib==1.1.1",
    "psutil==5.9.0 ; python_version <= '3.10'",
    "psutil==5.9.4 ; python_version > '3.10' and python_version < '3.12'", 
    "psutil==5.9.8 ; python_version >= '3.12'", # (Noble) Mostly to have a wheel package
    "psycopg2==2.9.2 ; python_version == '3.10'", # (Jammy)
    "psycopg2==2.9.5 ; python_version == '3.11'",
    "psycopg2==2.9.9 ; python_version >= '3.12'", # (Noble) Mostly to have a wheel package
    "pyopenssl==21.0.0 ; python_version < '3.12'",
    "pyopenssl==24.1.0 ; python_version >= '3.12'", # (Noble) min 23.2.0, pinned for compatibility with cryptography==42.0.8 and security patches
    "PyPDF2==1.26.0 ; python_version <= '3.10'",
    "PyPDF2==2.12.1 ; python_version > '3.10'",
    "pypiwin32 ; sys_platform == 'win32'",
    "pyserial==3.5",
    "python-dateutil==2.8.1 ; python_version < '3.11'",
    "python-dateutil==2.8.2 ; python_version >= '3.11'",
    "python-ldap==3.4.0 ; sys_platform != 'win32' and python_version < '3.12'", # min version = 3.2.0 (Focal with security backports)
    "python-ldap==3.4.4 ; sys_platform != 'win32' and python_version >= '3.12'",  # (Noble) Mostly to have a wheel package
    "python-stdnum==1.17 ; python_version < '3.11'",  # (jammy)
    "python-stdnum==1.19 ; python_version >= '3.11'",
    "pytz",  # no version pinning to avoid OS perturbations
    "pyusb==1.2.1",
    "qrcode==7.3.1 ; python_version < '3.11'",  # (jammy)
    "qrcode==7.4.2 ; python_version >= '3.11'",
    "reportlab==3.6.8 ; python_version <= '3.10'",
    "reportlab==3.6.12 ; python_version > '3.10' and python_version < '3.12'",
    "reportlab==4.1.0 ; python_version >= '3.12'", # (Noble) Mostly to have a wheel package
    "requests==2.25.1 ;  python_version < '3.11'", # versions < 2.25 aren't compatible w/ urllib3 1.26. Bullseye = 2.25.1. min version = 2.22.0 (Focal)
    "requests==2.31.0 ; python_version >= '3.11'", # (Noble)
    "rjsmin==1.1.0 ; python_version < '3.11'",  # (jammy)
    "rjsmin==1.2.0 ; python_version >= '3.11'",
    "rl-renderPM==4.0.3 ; sys_platform == 'win32' and python_version >= '3.12'",  # Needed by reportlab 4.1.0 but included in deb package
    "urllib3==1.26.5 ; python_version < '3.12'", # indirect / min version = 1.25.8 (Focal with security backports)
    "urllib3==2.0.7  ; python_version >= '3.12'",  # (Noble) Compatibility with cryptography
    "vobject==0.9.6.1",
    "Werkzeug==2.0.2 ; python_version <= '3.10'",
    "Werkzeug==2.2.2 ; python_version > '3.10' and python_version < '3.12'",
    "Werkzeug==3.0.1 ; python_version >= '3.12'",  # (Noble) Avoid deprecation warnings
    "xlrd==1.2.0 ; python_version < '3.12'",  # (jammy)
    "xlrd==2.0.1 ; python_version >= '3.12'",
    "XlsxWriter==3.0.2 ; python_version < '3.12'",  # (jammy)
    "XlsxWriter==3.1.9 ; python_version >= '3.12'",
    "xlwt==1.3.0",
    "zeep==4.1.0 ; python_version < '3.11'",  # (jammy)
    "zeep==4.2.1 ; python_version >= '3.11'",
]

[project.scripts]
# XXX odoo is there for backward-compatibility with deb install
odoo = "odoo.cli:main"
odoo-bin = "odoo.cli:main"

[project.urls]
"Homepage" = "https://www.odoo.com"
"Repository" = "https://github.com/odoo/odoo"
"Download" = "https://www.odoo.com/page/download"
"Documentation" = "https://www.odoo.com/documentation"
"Bug Tracker" = "https://www.odoo.com/help"

[tool.setuptools]
packages = ["odoo"]

[tool.setuptools.dynamic]
version = {attr = "odoo.release.version"}

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
fix = false
show-fixes = true
output-format = "full"
line-length = 120
preview = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
	"A",  # (builtin-shadowing)
	"ANN", # (flake8-annotations)
	"ARG", # (unused-arguments)
	"B", # (flake8-bugbear)
	"B904", # (reraise-no-cause)
	"C408", # (unnecessary-collection-call)
	"C420", # (unnecessary-dict-comprehension-for-iterable)
	"C901", # (complex-structure)
	"COM812", # (missing-trailing-comma)
	"CPY001", # (flake8_copyright)
	"D", # (pydocstyle)
	"DOC", # (docstring-missing-returns)
	"DTZ", # (datetime-now-without-tz-arg)
	"E266", # (multiple-leading-hashes-for-block-comment)
	"E501", # (line-too-long)
	"E713", # (not-in-test)
	"E741", # (ambiguous-variable-name)
	"EM101", # (raw-string-in-exception)
	"EM102", # (f-string-in-exception)
	"ERA001", # (commented-out-code)
	"FA100", # (future-rewritable-type-annotation)
	"FA102", # (future-required-type-annotation)
	"FBT", # (flake8-boolean-trap)
	"FIX", # (flake8-fixme)
	"FURB101", # (read-whole-file)
	"FURB103", # (write-whole-file)
	"FURB118", # (reimplemented-operator)
	"FURB152", # (math-constant)
	"I001", # (unsorted-imports)
	"INP001", # (implicit-namespace-package)
	"N", # (pep8-naming)
	"PD", # (pandas-vet)
	"PERF", # (Perflint)
	"PGH003", # (blanket-type-ignore)
	"PIE790", # (no-unnecessary-pass)
	"PIE808", # (unnecessary-range-start)
	"PLC2701", # (import-private-name)
	"PLR", # (pylint-refactoring)
	"PLW2901", # (redefined-loop-name)
	"PT", # (flake8-pytest-style)
	"PTH", # (flake8-use-pathlib)
	"Q", # (flake8-quotes)
	"RET", # (flake8-return)
	"RET502", # (implicit-return-value)
	"RET503", # (implicit-return)
	"RSE102", # (unnecessary-paren-on-raise-exception)
	"RUF001", # (ambiguous-unicode-character-string)
	"RUF005", # (collection-literal-concatenation)
	"RUF012", # (mutable-class-default)
	"RUF021", # (parenthesize-chained-operators)
	"RUF100", # (unused-noqa)
	"S", # (flake8-bandit)
	"SIM102", # (collapsible-if)
	"SIM108",  # (if-else-block-instead-of-if-exp)
	"SIM117",  # ( multiple-with-statements)
	"SLF001",  # (private-member-access)
	"TD",  # (flake8-todos)
	"TID252",  # (relative-imports)
	"TRY002",  # (raise-vanilla-class)
	"TRY003",  # (raise-vanilla-args)
	"TRY300",  # (try-consider-else)
	"TRY400",  # (error-instead-of-exception)
	"UP006",  # (non-pep585-annotation)
	"UP007",  # (non-pep604-annotation)
	"UP031",  # (printf-string-formatting)
	"UP038",  # (non-pep604-isinstance)
]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["format", "id", "type"]

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "odoo-addons", "local-folder"]
known-first-party = ["odoo"]
known-local-folder = ["odoo.addons", "odoo.upgrade"]

[tool.ruff.lint.isort.sections]
odoo-addons = ["odoo.addons", "openerp.addons"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = [
    "F401",
    "F403",
]
# ignore docstring lint for tests files
"*/tests/*.py" = ["D"]
# and for upgrade scripts
"*/*/{pre,post,end}-*.py" = ["D"]
